using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Kingdee.K3.WEINA.SCM.PlugIn
{
    public class SQLStaticStatements
    {

        public string returnSQLInStockDetailReport() {
            return SQL4InStock;
        }

        public string returnSQL4KUCUNQTY()
        {
            return SQL4KuCunQTY;
        }

        public string returnSQK4StockDetailReport()
        {
            return SQL4StockDetail;
        }

        public string returnSQL4KUCUNDETAILQTY()
        {
            return SQL4KUCUNDETAILQTY;
        }

        public string returnSQK4OnTheWayDetailReport()
        {
            return SQL4OnTheWayDetail;
        }


        public string returnSQK4NoOutDetailReport()
        {
            return SQL4NoOutDetail;
        }

        public string returnSQL4SalerRankListReport(string searchCondition)
        {
            return SQL4SalerRankList + searchCondition + leftSQL;
        }

        public string returnSQL4SalerRankListReportByCust(string searchCondition)
        {
            return SQL4SalerRankListByCust + searchCondition + leftSQLByCust;
        }

        public string returnSQL4UpdateSaleNO()
        {
            return updateSaleNO;
        }

        public string returnSQL4UpdateSaleZP()
        {
            return updateSaleZP;
        }

        public string returnSQL4UpdateTotalAMT()
        {
            return updateTotalAMT;
        }

        public string returnSQL4UpdateNoSendAMT()
        {
            return updateNoSendAMT;
        }

        public string returnSQL4UpdateAllYear()
        {
            return UpdateAllYear;
        }

        public string returnSQLEndProductionSendOutDetailReport(string searchCondition)
        {
            return SQL4EndProductionSendOut + searchCondition;
        }

        public string returnSQL4ProdSum()
        {
            return SQL4ProdSum;
        }

        public string returnSQL4qichukucun()
        {
            return SQL4QiChuKuCun;
        }

        public string returnSQL4qimokucun()
        {
            return SQL4QiMoKuCun;
        }

        string SQL4KUCUNDETAILQTY = @"/*dialect*/
UPDATE {0} 
SET KCTOTAL = 
(SELECT sum(isnull(FQTY1,0))-sum(isnull(fqty2,0))  from 
(
(SELECT
 SUM(ISNULL(T1.FQTY,0)) AS FQTY1 ,0 as fqty2
FROM
--其他入库
T_STK_MISCELLANEOUSENTRY T1 
LEFT JOIN T_STK_MISCELLANEOUS T2 ON T1.FID = T2.FID 
WHERE  T1.FMATERIALID={1}
AND T2.FDOCUMENTSTATUS ='C' AND T1.FSTOCKID={2} ) 
union all 
(SELECT
 SUM(ISNULL(T3.FREALQTY,0)) AS FQTY1  ,0 as fqty2
FROM
--销售退货
T_SAL_RETURNSTOCKENTRY T3
LEFT JOIN T_SAL_RETURNSTOCK T4 ON T3.FID = T4.FID 
WHERE  T3.FMATERIALID={1}
AND T4.FDOCUMENTSTATUS ='C' AND T3.FSTOCKID={2} ) 
union all 
(SELECT
 0 as fqty1, SUM(ISNULL(T5.FQTY,0)) AS FQTY2
FROM
T_STK_STKTRANSFERINENTRY T5
LEFT JOIN T_STK_STKTRANSFERIN T6 ON T5.FID = T6.FID 
WHERE T5.FMATERIALID={1}
AND T6.FDOCUMENTSTATUS ='C' AND T5.FSRCSTOCKID={2} )
union all 
(SELECT
 0 as fqty1 , SUM(ISNULL(T7.FREALQTY,0)) AS FQTY2
FROM
--销售出库
T_SAL_OUTSTOCKENTRY T7 
LEFT JOIN T_SAL_OUTSTOCK T8 ON T7.FID = T8.FID 
WHERE  T7.FMATERIALID={1}
AND T8.FDOCUMENTSTATUS ='C' AND T7.FSTOCKID={2} ) 
union all 
(SELECT
 0 as fqty1 , SUM(ISNULL(T9.FQTY,0)) AS FQTY2
FROM
--其他出库
T_STK_MISDELIVERYENTRY T9 
LEFT JOIN T_STK_MISDELIVERY T10 ON T9.FID = T10.FID 
WHERE  T9.FMATERIALID={1}
AND T10.FDOCUMENTSTATUS ='C' AND T9.FSTOCKID={2} ) 
union all 
(SELECT
 SUM(ISNULL(T11.FRealQty,0)) AS FQTY1 ,0 as fqty2
FROM
--采购入库
T_STK_INSTOCKENTRY T11 
LEFT JOIN t_STK_InStock T12 ON T11.FID = T12.FID 
WHERE  T11.FMATERIALID={1}
AND T12.FDOCUMENTSTATUS ='C' AND T11.FSTOCKID={2} ) 
union all 
(SELECT
 0 as fqty1 , SUM(ISNULL(T13.FRMREALQTY,0)) AS FQTY2
FROM
--采购退料
T_PUR_MRBENTRY T13 
LEFT JOIN t_PUR_MRB T14 ON T13.FID = T14.FID 
WHERE T13.FMATERIALID={1}
AND T14.FDOCUMENTSTATUS ='C' AND T13.FSTOCKID={2} ) 
union all 
(SELECT
 SUM(ISNULL(T15.FRealQty,0)) AS FQTY1 ,0 as fqty2
FROM
--生产入库
T_PRD_INSTOCKENTRY T15
LEFT JOIN T_PRD_INSTOCK T16 ON T15.FID = T16.FID 
WHERE  T15.FMATERIALID={1}
AND T16.FDOCUMENTSTATUS ='C' AND T15.FSTOCKID={2} ) 
union all 
(SELECT
 SUM(ISNULL(T17.FQty,0)) AS FQTY1 ,0 as fqty2
FROM
--初始化库存
T_STK_INVINITDETAIL T17
LEFT JOIN T_STK_INVINIT T18 ON T17.FID = T18.FID 
WHERE  T17.FMATERIALID={1}
AND T18.FDOCUMENTSTATUS ='C' AND T17.FSTOCKID={2} ) 
union all 
(SELECT
 SUM(ISNULL(T19.FGainQty,0)) AS FQTY1 ,0 as fqty2
FROM
--盘盈
T_STK_STKCOUNTGAINENTRY T19
LEFT JOIN T_STK_STKCOUNTGAIN T20 ON T19.FID = T20.FID 
WHERE  T19.FMATERIALID={1}
AND T20.FDOCUMENTSTATUS ='C' AND T19.FSTOCKID={2} ) 
union all 
(SELECT
0 as fqty1 , SUM(ISNULL(T21.FLossQty,0)) AS FQTY2
FROM
--盘亏
T_STK_STKCOUNTLOSSENTRY T21
LEFT JOIN T_STK_STKCOUNTLOSS T22 ON T21.FID = T22.FID 
WHERE  T21.FMATERIALID={1}
AND T22.FDOCUMENTSTATUS ='C' AND T21.FSTOCKID={2} ))a
)
WHERE BILLNO = '{3}'

";


        string SQL4KuCunQTY = @"/*dialect*/
UPDATE {0} 
SET KUCUNQTY ={5} + 
(SELECT sum(isnull(FQTY1,0))-sum(isnull(fqty2,0))  from 
(
(SELECT
 SUM(ISNULL(T1.FQTY,0)) AS FQTY1 ,0 as fqty2
FROM
--其他入库
T_STK_MISCELLANEOUSENTRY T1 
LEFT JOIN T_STK_MISCELLANEOUS T2 ON T1.FID = T2.FID 
WHERE CONVERT(varchar(100), T2.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T2.FApproveDate, 20) <='{2}'  AND T1.FMATERIALID={3}
AND T2.FDOCUMENTSTATUS ='C' AND T1.FSTOCKID=281715 ) 
union all 
(SELECT
 SUM(ISNULL(T3.FREALQTY,0)) AS FQTY1  ,0 as fqty2
FROM
--销售退货
T_SAL_RETURNSTOCKENTRY T3
LEFT JOIN T_SAL_RETURNSTOCK T4 ON T3.FID = T4.FID 
WHERE CONVERT(varchar(100), T4.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T4.FApproveDate, 20) <='{2}'  AND T3.FMATERIALID={3}
AND T4.FDOCUMENTSTATUS ='C' AND T3.FSTOCKID=281715 ) 
union all 
(SELECT
 0 as fqty1, SUM(ISNULL(T5.FQTY,0)) AS FQTY2
FROM
T_STK_STKTRANSFERINENTRY T5
LEFT JOIN T_STK_STKTRANSFERIN T6 ON T5.FID = T6.FID 
WHERE CONVERT(varchar(100), T6.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T6.FApproveDate, 20) <='{2}'  AND T5.FMATERIALID={3}
AND T6.FDOCUMENTSTATUS ='C' AND T5.FSRCSTOCKID=281715 )
union all 
(SELECT
 0 as fqty1 , SUM(ISNULL(T7.FREALQTY,0)) AS FQTY2
FROM
--销售出库
T_SAL_OUTSTOCKENTRY T7 
LEFT JOIN T_SAL_OUTSTOCK T8 ON T7.FID = T8.FID 
WHERE CONVERT(varchar(100), T8.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T8.FApproveDate, 20) <='{2}'  AND T7.FMATERIALID={3}
AND T8.FDOCUMENTSTATUS ='C' AND T7.FSTOCKID=281715 ) 
union all 
(SELECT
 0 as fqty1 , SUM(ISNULL(T9.FQTY,0)) AS FQTY2
FROM
--其他出库
T_STK_MISDELIVERYENTRY T9 
LEFT JOIN T_STK_MISDELIVERY T10 ON T9.FID = T10.FID 
WHERE CONVERT(varchar(100), T10.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T10.FApproveDate, 20) <='{2}'  AND T9.FMATERIALID={3}
AND T10.FDOCUMENTSTATUS ='C' AND T9.FSTOCKID=281715 ) 
union all 
(SELECT
 SUM(ISNULL(T11.FRealQty,0)) AS FQTY1 ,0 as fqty2
FROM
--采购入库
T_STK_INSTOCKENTRY T11 
LEFT JOIN t_STK_InStock T12 ON T11.FID = T12.FID 
WHERE CONVERT(varchar(100), T12.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T12.FApproveDate, 20) <='{2}'  AND T11.FMATERIALID={3}
AND T12.FDOCUMENTSTATUS ='C' AND T11.FSTOCKID=281715 ) 
union all 
(SELECT
 0 as fqty1 , SUM(ISNULL(T13.FRMREALQTY,0)) AS FQTY2
FROM
--采购退料
T_PUR_MRBENTRY T13 
LEFT JOIN t_PUR_MRB T14 ON T13.FID = T14.FID 
WHERE CONVERT(varchar(100), T14.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T14.FApproveDate, 20) <='{2}'  AND T13.FMATERIALID={3}
AND T14.FDOCUMENTSTATUS ='C' AND T13.FSTOCKID=281715 ) 
union all 
(SELECT
 SUM(ISNULL(T15.FRealQty,0)) AS FQTY1 ,0 as fqty2
FROM
--生产入库
T_PRD_INSTOCKENTRY T15
LEFT JOIN T_PRD_INSTOCK T16 ON T15.FID = T16.FID 
WHERE CONVERT(varchar(100), T16.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T16.FApproveDate, 20) <='{2}'  AND T15.FMATERIALID={3}
AND T16.FDOCUMENTSTATUS ='C' AND T15.FSTOCKID=281715 ) 
union all 
(SELECT
 SUM(ISNULL(T17.FQty,0)) AS FQTY1 ,0 as fqty2
FROM
--初始化库存
T_STK_INVINITDETAIL T17
LEFT JOIN T_STK_INVINIT T18 ON T17.FID = T18.FID 
WHERE CONVERT(varchar(100), T18.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T18.FApproveDate, 20) <='{2}'  AND T17.FMATERIALID={3}
AND T18.FDOCUMENTSTATUS ='C' AND T17.FSTOCKID=281715 ) 
union all 
(SELECT
 SUM(ISNULL(T19.FGainQty,0)) AS FQTY1 ,0 as fqty2
FROM
--盘盈
T_STK_STKCOUNTGAINENTRY T19
LEFT JOIN T_STK_STKCOUNTGAIN T20 ON T19.FID = T20.FID 
WHERE CONVERT(varchar(100), T20.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T20.FApproveDate, 20) <='{2}'  AND T19.FMATERIALID={3}
AND T20.FDOCUMENTSTATUS ='C' AND T19.FSTOCKID=281715 ) 
union all 
(SELECT
0 as fqty1 , SUM(ISNULL(T21.FLossQty,0)) AS FQTY2
FROM
--盘亏
T_STK_STKCOUNTLOSSENTRY T21
LEFT JOIN T_STK_STKCOUNTLOSS T22 ON T21.FID = T22.FID 
WHERE CONVERT(varchar(100), T22.FApproveDate, 20) > '{1}'  and CONVERT(varchar(100), T22.FApproveDate, 20) <='{2}'  AND T21.FMATERIALID={3}
AND T22.FDOCUMENTSTATUS ='C' AND T21.FSTOCKID=281715 ))a
)
WHERE BILLNO = '{4}'

";


        string SQL4InStock = @"/*dialect*/
 SELECT	
    BILLNO,
    FQTY,
    NAME,
    MATERIAL,
    CKNAME,
    OLDNUMBER,
    PRICE,
    BILLTYPE,
    FDATE,
    FHYMING,
    FMATERIALID, 
    2 AS JINDU,
    CAST (0 AS DECIMAL(18,2)) AS KUCUNQTY,
    row_number() over (ORDER BY BILLNO) as FIDENTITYID INTO {0}
 FROM
(    
 SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FQty, 0)) AS FQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FApproveDate AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING
		FROM T_STK_MISCELLANEOUS T1		
		INNER JOIN T_STK_MISCELLANEOUSENTRY T2 ON T1.FID = T2.FID
    LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID= t3.fstockid
--		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C' AND T2.FMATERIALID = {1} AND T3.FNUMBER='{2}' AND CONVERT(varchar(100), T1.FApproveDate, 23)  BETWEEN '{3}' AND '{4}'
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T3.FNUMBER,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FApproveDate,T4.FMATERIALID,T4.F_KD_TEXT
-- 其他入库
UNION ALL 
      SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FREALQTY, 0)) AS FQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FApproveDate AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING
		FROM T_SAL_RETURNSTOCK T1		
		INNER JOIN T_SAL_RETURNSTOCKENTRY T2 ON T1.FID = T2.FID
    LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID= t3.fstockid
--		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C' AND T2.FMATERIALID = {1} AND T3.FNUMBER='{2}' AND CONVERT(varchar(100), T1.FApproveDate, 23)  BETWEEN '{3}' AND '{4}'
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T3.FNUMBER,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FApproveDate,T4.FMATERIALID,T4.F_KD_TEXT  
-- 销售退货
UNION ALL 
      SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FREALQTY, 0)) AS FQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FApproveDate AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING
		FROM T_STK_InStock  T1		
		INNER JOIN T_STK_INSTOCKENTRY T2 ON T1.FID = T2.FID
    LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID= t3.fstockid
--		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C' AND T2.FMATERIALID = {1} AND T3.FNUMBER='{2}' AND CONVERT(varchar(100), T1.FApproveDate, 23)  BETWEEN '{3}' AND '{4}'
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T3.FNUMBER,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FApproveDate,T4.FMATERIALID,T4.F_KD_TEXT 
-- 采购入库
UNION ALL 
      SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FREALQTY, 0)) AS FQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FApproveDate AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING
		FROM T_PRD_INSTOCK  T1		
		INNER JOIN T_PRD_INSTOCKENTRY T2 ON T1.FID = T2.FID
    LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID= t3.fstockid
--		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPE AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C' AND T2.FMATERIALID = {1} AND T3.FNUMBER='{2}' AND CONVERT(varchar(100), T1.FApproveDate, 23)  BETWEEN '{3}' AND '{4}'
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T3.FNUMBER,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FApproveDate,T4.FMATERIALID,T4.F_KD_TEXT
-- 生产入库
UNION ALL 
      SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FGainQty, 0)) AS FQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FApproveDate AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING
		FROM T_STK_STKCOUNTGAIN  T1		
		INNER JOIN T_STK_STKCOUNTGAINENTRY T2 ON T1.FID = T2.FID
    LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID= t3.fstockid
--		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C' AND T2.FMATERIALID = {1} AND T3.FNUMBER='{2}' AND CONVERT(varchar(100), T1.FApproveDate, 23)  BETWEEN '{3}' AND '{4}'
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T3.FNUMBER,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FApproveDate,T4.FMATERIALID,T4.F_KD_TEXT
  -- 盘盈 
 UNION ALL 
      SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FQty, 0)) AS FQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FApproveDate AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING
		FROM T_STK_STKTRANSFERIN  T1		
		INNER JOIN T_STK_STKTRANSFERINENTRY T2 ON T1.FID = T2.FID
    LEFT JOIN T_BD_STOCK T3 ON T2.FDESTSTOCKID= t3.fstockid
--		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C' AND T2.FMATERIALID = {1} AND T3.FNUMBER='{2}' AND CONVERT(varchar(100), T1.FApproveDate, 23)  BETWEEN '{3}' AND '{4}' AND T2.FDESTSTOCKID = 281715
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T3.FNUMBER,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FApproveDate,T4.FMATERIALID,T4.F_KD_TEXT     
-- 调入 
)AS T 
ORDER BY FDATE

";



        string SQL4QiMoKuCun = @"/*dialect*/
UPDATE {0}  
SET QIMOKUCUN = (SELECT TOTPROD FROM 
(
SELECT FMATERIALID AS FMID,
SUM( ISNULL(A1.FQTY1,0) +ISNULL(A5.FQTY5,0) - ISNULL(A7.FQTY7, 0) - ISNULL(A9.FQTY9, 0) - ISNULL(A11.FQTY11, 0)  + ISNULL(A19.FQTY19,0) + ISNULL(A15.FQTY15,0) - ISNULL(A17.FQTY17,0) + ISNULL(A21.FQTY21,0) + ISNULL(A23.FQTY23,0) - ISNULL(A25.FQTY25,0)) as TOTPROD 
FROM T_BD_MATERIAL T
LEFT JOIN
(SELECT
  T1.FMATERIALID AS FMIDA1,
  SUM(ISNULL(T1.FQTY,0)) AS FQTY1
FROM
--其他入库
T_STK_MISCELLANEOUSENTRY T1 
LEFT JOIN T_STK_MISCELLANEOUS T2 ON T1.FID = T2.FID 
WHERE CONVERT(varchar(100), T2.FApproveDate, 23) <= '{1}'  AND T2.FDOCUMENTSTATUS ='C' AND T1.FSTOCKID=281715
GROUP BY T1.FMATERIALID )  A1 ON A1.FMIDA1 = T.FMATERIALID


-- 销售退货
LEFT JOIN 
(
  SELECT T5.FMATERIALID AS FMIDA5,
  SUM(ISNULL(T5.FREALQTY, 0)) AS FQTY5 
FROM T_SAL_RETURNSTOCKENTRY T5 
LEFT JOIN T_SAL_RETURNSTOCK T6 ON T5.FID=T6.FID
WHERE CONVERT(varchar(100), T6.FApproveDate, 23) <= '{1}'  AND T6.FDOCUMENTSTATUS ='C' AND T5.FSTOCKID=281715
GROUP BY T5.FMATERIALID ) A5 ON A5.FMIDA5 = T.FMATERIALID

LEFT JOIN 
(
 SELECT T7.FMATERIALID AS FMIDA7,
   SUM(ISNULL(T7.FQty, 0)) AS FQTY7 
FROM T_STK_STKTRANSFERINENTRY T7 
LEFT JOIN T_STK_STKTRANSFERIN T8 ON T7.FID=T8.FID
--INNER JOIN T_STK_STKTRANSFEROUTENTRY_T t71 on t71.FENTRYID = t7.FENTRYID
WHERE CONVERT(varchar(100), T8.FApproveDate, 23) <= '{1}'  AND T8.FDOCUMENTSTATUS ='C' AND T7.FSRCSTOCKID=281715
GROUP BY T7.FMATERIALID ) A7 ON A7.FMIDA7 = T.FMATERIALID


LEFT JOIN 
(
  SELECT T9.FMATERIALID AS FMIDA9,
  SUM(ISNULL(T9.FREALQTY, 0)) AS FQTY9 
FROM T_SAL_OUTSTOCKENTRY T9 
LEFT JOIN T_SAL_OUTSTOCK T10 ON T9.FID=T10.FID
WHERE CONVERT(varchar(100), T10.FApproveDate, 23) <= '{1}'  AND T10.FDOCUMENTSTATUS ='C' AND T9.FSTOCKID=281715
GROUP BY T9.FMATERIALID ) A9 ON A9.FMIDA9 = T.FMATERIALID


LEFT JOIN 
(
  SELECT T11.FMATERIALID AS FMIDA11,
  SUM(ISNULL(T11.FQTY, 0)) AS FQTY11 
FROM T_STK_MISDELIVERYENTRY T11 
LEFT JOIN T_STK_MISDELIVERY T12 ON T11.FID=T12.FID
WHERE CONVERT(varchar(100), T12.FApproveDate, 23) <= '{1}'  AND T12.FDOCUMENTSTATUS ='C' AND T11.FSTOCKID=281715
GROUP BY T11.FMATERIALID ) A11 ON A11.FMIDA11 = T.FMATERIALID



LEFT JOIN 
(

SELECT 
   TA1.FMATERIALID AS FMIDA15,
   SUM(ISNULL(TA1.FRealQty,0)) AS FQTY15 
FROM 
  T_STK_INSTOCKENTRY TA1 
LEFT JOIN t_STK_InStock TA2 ON TA1.FID=TA2.FID
WHERE CONVERT(varchar(100), TA2.FApproveDate, 23) <='{1}' AND TA2.FDOCUMENTSTATUS ='C' AND TA1.FSTOCKID=281715
GROUP BY TA1.FMATERIALID) A15 ON A15.FMIDA15 = T.FMATERIALID 
-- 采购退料单
LEFT JOIN 
(SELECT 
TA3.FMATERIALID AS FMIDA17,
SUM(ISNULL(TA3.FRMREALQTY , 0)) AS FQTY17
FROM 
T_PUR_MRBENTRY TA3 
LEFT JOIN t_PUR_MRB TA4 ON TA3.FID=TA4.FID
WHERE CONVERT(varchar(100), TA4.FApproveDate, 23) <='{1}' AND TA4.FDOCUMENTSTATUS ='C' AND TA3.FSTOCKID=281715
GROUP BY TA3.FMATERIALID) A17 ON A17.FMIDA17 = T.FMATERIALID

LEFT JOIN 
(
SELECT 
   TA5.FMATERIALID AS FMIDA19,
   SUM(ISNULL(FRealQty,0)) AS FQTY19
FROM 
    T_PRD_INSTOCKENTRY AS TA5
LEFT JOIN T_PRD_INSTOCK  TA6 ON TA5.FID=TA6.FID 
WHERE CONVERT(varchar(100), TA6.FApproveDate, 23) <='{1}'  AND TA6.FDOCUMENTSTATUS ='C' AND TA5.FSTOCKID=281715
GROUP BY TA5.FMATERIALID) A19 ON A19.FMIDA19 = T.FMATERIALID

LEFT JOIN
(SELECT 
TA7.FMATERIALID AS FMIDA21,
SUM(ISNULL(TA7.FQTY, 0)) AS FQTY21  
FROM 
   T_STK_INVINITDETAIL AS TA7 
LEFT JOIN T_STK_INVINIT TA8 ON TA7.FID=TA8.FID
WHERE TA8.FDOCUMENTSTATUS ='C' AND TA7.FSTOCKID=281715
GROUP BY TA7.FMATERIALID) A21 ON A21.FMIDA21=T.FMATERIALID

LEFT JOIN
(SELECT 
TA9.FMATERIALID AS FMIDA23,
SUM(ISNULL(TA9.FGainQty, 0)) AS FQTY23
FROM T_STK_STKCOUNTGAINENTRY AS TA9
LEFT JOIN T_STK_STKCOUNTGAIN TA10 ON TA9.FID=TA10.FID
WHERE CONVERT(varchar(100), TA10.FApproveDate, 23) <= '{1}' AND TA10.FDOCUMENTSTATUS ='C' AND TA9.FSTOCKID=281715
GROUP BY TA9.FMATERIALID) A23 ON A23.FMIDA23=T.FMATERIALID

LEFT JOIN 
(SELECT 
TA11.FMATERIALID AS FMIDA25,
SUM(ISNULL(TA11.FLossQty, 0)) AS FQTY25
FROM T_STK_STKCOUNTLOSSENTRY AS TA11 
LEFT JOIN T_STK_STKCOUNTLOSS TA12 ON  TA11.FID=TA12.FID
WHERE CONVERT(varchar(100), TA12.FApproveDate, 23)<= '{1}' AND TA12.FDOCUMENTSTATUS ='C' AND TA11.FSTOCKID=281715
GROUP BY TA11.FMATERIALID) A25 ON A25.FMIDA25 = T.FMATERIALID



GROUP BY T.FMATERIALID
) Q 

 where FMATERIALID = FMID
)

";


        string SQL4QiChuKuCun = @"/*dialect*/
UPDATE {0}  
SET CHUQIKUCUN = (SELECT TOTPROD FROM 
(
SELECT FMATERIALID AS FMID,
SUM( ISNULL(A1.FQTY1,0) +ISNULL(A5.FQTY5,0) - ISNULL(A7.FQTY7, 0) - ISNULL(A9.FQTY9, 0) - ISNULL(A11.FQTY11, 0)  + ISNULL(A19.FQTY19,0) + ISNULL(A15.FQTY15,0) - ISNULL(A17.FQTY17,0) + ISNULL(A21.FQTY21,0) + ISNULL(A23.FQTY23,0) - ISNULL(A25.FQTY25,0)) as TOTPROD 
FROM T_BD_MATERIAL T
LEFT JOIN
(SELECT
  T1.FMATERIALID AS FMIDA1,
  SUM(ISNULL(T1.FQTY,0)) AS FQTY1
FROM
--其他入库
T_STK_MISCELLANEOUSENTRY T1 
LEFT JOIN T_STK_MISCELLANEOUS T2 ON T1.FID = T2.FID 
WHERE CONVERT(varchar(100), T2.FApproveDate, 23) < '{1}'  AND T2.FDOCUMENTSTATUS ='C' AND T1.FSTOCKID=281715
GROUP BY T1.FMATERIALID )  A1 ON A1.FMIDA1 = T.FMATERIALID


-- 销售退货
LEFT JOIN 
(
  SELECT T5.FMATERIALID AS FMIDA5,
  SUM(ISNULL(T5.FREALQTY, 0)) AS FQTY5 
FROM T_SAL_RETURNSTOCKENTRY T5 
LEFT JOIN T_SAL_RETURNSTOCK T6 ON T5.FID=T6.FID
WHERE CONVERT(varchar(100), T6.FApproveDate, 23) < '{1}'  AND T6.FDOCUMENTSTATUS ='C' AND T5.FSTOCKID=281715
GROUP BY T5.FMATERIALID ) A5 ON A5.FMIDA5 = T.FMATERIALID

LEFT JOIN 
(
 SELECT T7.FMATERIALID AS FMIDA7,
   SUM(ISNULL(T7.FQty, 0)) AS FQTY7 
FROM T_STK_STKTRANSFERINENTRY T7 
LEFT JOIN T_STK_STKTRANSFERIN T8 ON T7.FID=T8.FID
--INNER JOIN T_STK_STKTRANSFEROUTENTRY_T t71 on t71.FENTRYID = t7.FENTRYID
WHERE CONVERT(varchar(100), T8.FApproveDate, 23) < '{1}'  AND T8.FDOCUMENTSTATUS ='C' AND T7.FSRCSTOCKID=281715
GROUP BY T7.FMATERIALID ) A7 ON A7.FMIDA7 = T.FMATERIALID


LEFT JOIN 
(
  SELECT T9.FMATERIALID AS FMIDA9,
  SUM(ISNULL(T9.FREALQTY, 0)) AS FQTY9 
FROM T_SAL_OUTSTOCKENTRY T9 
LEFT JOIN T_SAL_OUTSTOCK T10 ON T9.FID=T10.FID
WHERE CONVERT(varchar(100), T10.FApproveDate, 23) < '{1}'  AND T10.FDOCUMENTSTATUS ='C' AND T9.FSTOCKID=281715
GROUP BY T9.FMATERIALID ) A9 ON A9.FMIDA9 = T.FMATERIALID


LEFT JOIN 
(
  SELECT T11.FMATERIALID AS FMIDA11,
  SUM(ISNULL(T11.FQTY, 0)) AS FQTY11 
FROM T_STK_MISDELIVERYENTRY T11 
LEFT JOIN T_STK_MISDELIVERY T12 ON T11.FID=T12.FID
WHERE CONVERT(varchar(100), T12.FApproveDate, 23) < '{1}'  AND T12.FDOCUMENTSTATUS ='C' AND T11.FSTOCKID=281715
GROUP BY T11.FMATERIALID ) A11 ON A11.FMIDA11 = T.FMATERIALID



LEFT JOIN 
(

SELECT 
   TA1.FMATERIALID AS FMIDA15,
   SUM(ISNULL(TA1.FRealQty,0)) AS FQTY15 
FROM 
  T_STK_INSTOCKENTRY TA1 
LEFT JOIN t_STK_InStock TA2 ON TA1.FID=TA2.FID
WHERE CONVERT(varchar(100), TA2.FApproveDate, 23) <'{1}' AND TA2.FDOCUMENTSTATUS ='C' AND TA1.FSTOCKID=281715
GROUP BY TA1.FMATERIALID) A15 ON A15.FMIDA15 = T.FMATERIALID 
-- 采购退料单
LEFT JOIN 
(SELECT 
TA3.FMATERIALID AS FMIDA17,
SUM(ISNULL(TA3.FRMREALQTY , 0)) AS FQTY17
FROM 
T_PUR_MRBENTRY TA3 
LEFT JOIN t_PUR_MRB TA4 ON TA3.FID=TA4.FID
WHERE CONVERT(varchar(100), TA4.FApproveDate, 23) <'{1}' AND TA4.FDOCUMENTSTATUS ='C' AND TA3.FSTOCKID=281715
GROUP BY TA3.FMATERIALID) A17 ON A17.FMIDA17 = T.FMATERIALID

LEFT JOIN 
(
SELECT 
   TA5.FMATERIALID AS FMIDA19,
   SUM(ISNULL(FRealQty,0)) AS FQTY19
FROM 
    T_PRD_INSTOCKENTRY AS TA5
LEFT JOIN T_PRD_INSTOCK  TA6 ON TA5.FID=TA6.FID 
WHERE CONVERT(varchar(100), TA6.FApproveDate, 23) <'{1}'  AND TA6.FDOCUMENTSTATUS ='C' AND TA5.FSTOCKID=281715
GROUP BY TA5.FMATERIALID) A19 ON A19.FMIDA19 = T.FMATERIALID

LEFT JOIN
(SELECT 
TA7.FMATERIALID AS FMIDA21,
SUM(ISNULL(TA7.FQTY, 0)) AS FQTY21  
FROM 
   T_STK_INVINITDETAIL AS TA7 
LEFT JOIN T_STK_INVINIT TA8 ON TA7.FID=TA8.FID
WHERE TA8.FDOCUMENTSTATUS ='C' AND TA7.FSTOCKID=281715
GROUP BY TA7.FMATERIALID) A21 ON A21.FMIDA21=T.FMATERIALID

LEFT JOIN
(SELECT 
TA9.FMATERIALID AS FMIDA23,
SUM(ISNULL(TA9.FGainQty, 0)) AS FQTY23
FROM T_STK_STKCOUNTGAINENTRY AS TA9
LEFT JOIN T_STK_STKCOUNTGAIN TA10 ON TA9.FID=TA10.FID
WHERE CONVERT(varchar(100), TA10.FApproveDate, 23) < '{1}' AND TA10.FDOCUMENTSTATUS ='C' AND TA9.FSTOCKID=281715
GROUP BY TA9.FMATERIALID) A23 ON A23.FMIDA23=T.FMATERIALID

LEFT JOIN 
(SELECT 
TA11.FMATERIALID AS FMIDA25,
SUM(ISNULL(TA11.FLossQty, 0)) AS FQTY25
FROM T_STK_STKCOUNTLOSSENTRY AS TA11 
LEFT JOIN T_STK_STKCOUNTLOSS TA12 ON  TA11.FID=TA12.FID
WHERE CONVERT(varchar(100), TA12.FApproveDate, 23)< '{1}' AND TA12.FDOCUMENTSTATUS ='C' AND TA11.FSTOCKID=281715
GROUP BY TA11.FMATERIALID) A25 ON A25.FMIDA25 = T.FMATERIALID



GROUP BY T.FMATERIALID
) Q 

 where FMATERIALID = FMID
)

";


        string SQL4ProdSum = @"/*dialect*/
            UPDATE {0}  
SET PRODINSTOCKNO = (SELECT TOTPROD FROM 
(
SELECT FMATERIALID AS FMID,
SUM( ISNULL(A1.FQTY1,0) + ISNULL(A3.FQTY3,0)+ISNULL(A5.FQTY5,0)+ISNULL(A7.FQTY7,0) +ISNULL(A19.FQTY19,0)+ISNULL(A23.FQTY23,0)) as TOTPROD 
FROM T_BD_MATERIAL T
LEFT JOIN
(SELECT
  T1.FMATERIALID AS FMIDA1,
  SUM(ISNULL(T1.FQTY,0)) AS FQTY1
FROM
--其他入库
T_STK_MISCELLANEOUSENTRY T1 
LEFT JOIN T_STK_MISCELLANEOUS T2 ON T1.FID = T2.FID 
WHERE CONVERT(varchar(100), T2.FApproveDate, 23)  BETWEEN '{1}' AND '{2}' AND T2.FDOCUMENTSTATUS ='C' AND T1.FSTOCKID=281715
GROUP BY T1.FMATERIALID )  A1 ON A1.FMIDA1 = T.FMATERIALID

LEFT JOIN 

(
SELECT
  T3.FMATERIALID AS FMIDA3,
  SUM(ISNULL(T3.FQTY,0)) AS FQTY3
FROM 
  T_STK_STKTRANSFERINENTRY T3 
LEFT JOIN T_STK_STKTRANSFERIN T4 ON T3.FID = T4.FID 
WHERE CONVERT(varchar(100), T4.FApproveDate, 23)  BETWEEN '{1}' AND '{2}' AND T4.FDOCUMENTSTATUS ='C' AND T3.FDESTSTOCKID = 281715
GROUP BY T3.FMATERIALID ) A3 ON A3.FMIDA3 = T.FMATERIALID


LEFT JOIN 
(
	SELECT 
	T7.FMATERIALID AS FMIDA7,
  SUM(ISNULL(T7.FREALQTY,0)) AS FQTY7
FROM T_STK_INSTOCKENTRY T7
LEFT JOIN T_STK_InStock T8 ON T7.FID = T8.FID
WHERE CONVERT(varchar(100), T8.FApproveDate, 23)  BETWEEN '{1}' AND '{2}' AND T8.FDOCUMENTSTATUS ='C' AND T7.FSTOCKID=281715
GROUP BY T7.FMATERIALID ) A7 ON A7.FMIDA7 = T.FMATERIALID



LEFT JOIN 
(
SELECT 
   TA5.FMATERIALID AS FMIDA19,
   SUM(ISNULL(FRealQty,0)) AS FQTY19
FROM 
    T_PRD_INSTOCKENTRY AS TA5
LEFT JOIN T_PRD_INSTOCK  TA6 ON TA5.FID=TA6.FID 
WHERE CONVERT(varchar(100), TA6.FApproveDate, 23)  BETWEEN '{1}' AND '{2}'  AND TA6.FDOCUMENTSTATUS ='C' AND TA5.FSTOCKID=281715
GROUP BY TA5.FMATERIALID) A19 ON A19.FMIDA19 = T.FMATERIALID

LEFT JOIN 
(SELECT 
TA9.FMATERIALID AS FMIDA23,
SUM(ISNULL(TA9.FGainQty, 0)) AS FQTY23
FROM T_STK_STKCOUNTGAINENTRY AS TA9
LEFT JOIN T_STK_STKCOUNTGAIN TA10 ON TA9.FID=TA10.FID
WHERE CONVERT(varchar(100), TA10.FApproveDate, 23) BETWEEN '{1}' AND '{2}' AND TA10.FDOCUMENTSTATUS ='C' AND TA9.FSTOCKID=281715
GROUP BY TA9.FMATERIALID) A23 ON A23.FMIDA23=T.FMATERIALID


LEFT JOIN 
(
  SELECT T5.FMATERIALID AS FMIDA5,
  SUM(ISNULL(T5.FREALQTY, 0)) AS FQTY5 
FROM T_SAL_RETURNSTOCKENTRY T5 
LEFT JOIN T_SAL_RETURNSTOCK T6 ON T5.FID=T6.FID
WHERE CONVERT(varchar(100), T6.FApproveDate, 23) BETWEEN '{1}' AND '{2}'  AND T6.FDOCUMENTSTATUS ='C' AND T5.FSTOCKID=281715
GROUP BY T5.FMATERIALID ) A5 ON A5.FMIDA5 = T.FMATERIALID



GROUP BY FMATERIALID
) Q 
 where FMATERIALID = FMID
)

";

        string SQL4EndProductionSendOut = @"/*dialect*/
select 
Tm.FNUMBER AS FNUMBER,
tm.FMATERIALID AS FMATERIALID,
'{2}+{3}' AS CONDITION,
mm.*,
row_number() over (ORDER BY Tm.FNUMBER) as FIDENTITYID into {0} 
from 	T_BD_MATERIAL tm INNER JOIN  
(  
            SELECT   
2 AS JINDU,
P.*


FROM

(SELECT

  T.FNUMBER AS FNUMBERsub,
  t.FMATERIALID AS FMATERIALIDsub,
  CAST (0 AS DECIMAL(18,2)) AS PRODINSTOCKNO,
  CAST (0 AS DECIMAL(18,2)) AS DIAOBOJINE,
  CAST (0 AS DECIMAL(18,2)) AS DIAOBOSUM,
  CAST (0 AS DECIMAL(18,2)) AS CHUQIKUCUN,
  CAST (0 AS DECIMAL(18,2)) AS QIMOKUCUN,
  CAST (0 AS DECIMAL(18,2)) AS QIMOKUCUNJINE,
	T.FOLDNUMBER AS FOLDNUMBER,
	T.F_KD_TEXT AS HANYUMING,
  T9.FREFCOST AS DANJIA,
  T10.FNAME AS FNAME,
  SUM(T3.FQTY) AS TOT,
T8.FNUMBER AS STOCK

FROM
	T_BD_MATERIAL T
LEFT JOIN T_BD_MaterialStock T9 ON T9.FMATERIALID = T.FMATERIALID
LEFT JOIN T_BD_MATERIAL_L T10 ON T10.FMATERIALID = T.FMATERIALID
LEFT JOIN T_STK_STKTRANSFERINENTRY T3 ON T3.FMATERIALID = T.FMATERIALID AND T3.FSRCSTOCKID = 281715
INNER JOIN T_STK_STKTRANSFERIN T4 ON T3.FID = T4.FID AND T4.FDOCUMENTSTATUS ='C'  
LEFT JOIN T_BD_STOCK T8 on t8.FStockID=t3.FDestStockID
WHERE CONVERT(varchar(100), T4.FApproveDate, 23)  BETWEEN '{2}' AND '{3}'
 -- where t.FMATERIALID = 297685 
GROUP BY  T.FNUMBER,t.FMATERIALID ,T.FOLDNUMBER,T.F_KD_TEXT,T9.FREFCOST,T8.FNUMBER,T10.FNAME 
) AS Q
PIVOT (
		max(TOT) FOR STOCK IN({1})
	) AS p  )mm on mm.FMATERIALIDsub =tm.FMATERIALID 
where tm.FNUMBER like 'P%' or tm.FNUMBER like 'S%' or tm.FNUMBER like 'Z%'
";




        string SQL4StockDetail = @"/*dialect*/ 
SELECT	
    BILLNO,
    OUTQTY,
    INQTY,
    NAME,
    MATERIAL,
    CKNAME,
    CANGKUNAME,
    OLDNUMBER,
    PRICE,
    BILLTYPE,
    FDATE,
    FHYMING,
    INSTOCKNAME,
    FMATERIALID,
    0 AS KCTOTAL, 
    2 AS JinDu,
    row_number() over (ORDER BY BILLNO) as FIDENTITYID INTO {0}
 FROM
(
-- 销售出库
      SELECT
			T1.FBILLNO AS BILLNO,
			SUM(ISNULL(T2.FRealQty, 0)) AS OUTQTY,
			0 AS INQTY,
			T41.FNAME AS NAME,
			T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
			T4.FOLDNUMBER AS OLDNUMBER,
			T32.FREFCOST AS PRICE,
			T5.FNAME AS BILLTYPE,
			T1.FDATE AS FDATE,
      T4.FMATERIALID AS FMATERIALID,
      T4.F_KD_TEXT AS FHYMING,
        NULL AS INSTOCKNAME
		FROM T_SAL_OUTSTOCK T1		
		INNER JOIN T_SAL_OUTSTOCKENTRY T2 ON T1.FID = T2.FID
	--	INNER JOIN T_SAL_OUTSTOCKENTRY_F T21 ON T21.FID = T1.FID
		-- LEFT JOIN T_BD_STOCK T3 ON t1.F_KD_BASE = t3.fstockid
LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID= t3.fstockid
		LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
		INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
		INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
		LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052		
    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
    WHERE T1.FDOCUMENTSTATUS ='C'
    GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
-- 其他出库
    SELECT
				T1.FBILLNO AS BILLNO,
			  SUM(ISNULL(T2.FQTY, 0)) AS OUTQTY,
				0 AS INQTY,
				T41.FNAME AS NAME,
				T4.FNUMBER AS MATERIAL,
			    T3.FNUMBER AS CKNAME,
                T31.FNAME AS CANGKUNAME,
				T4.FOLDNUMBER AS OLDNUMBER,
				T32.FREFCOST AS PRICE,
				T5.FNAME AS BILLTYPE,
				T1.FDATE AS FDATE,
        T4.FMATERIALID AS FMATERIALID,
        T4.F_KD_TEXT AS FHYMING,
        NULL AS INSTOCKNAME
			FROM T_STK_MISDELIVERY T1		
			INNER JOIN T_STK_MISDELIVERYENTRY T2 ON T1.FID = T2.FID
			LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = t3.fstockid
			LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
			INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
			INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
			LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
      LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
      WHERE T1.FDOCUMENTSTATUS ='C'
			GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
-- 其他入库
      		SELECT
					T1.FBILLNO AS BILLNO,
					0 AS OUTQTY,
					SUM(ISNULL(T2.FQTY, 0)) AS INQTY,
					T41.FNAME AS NAME,
					T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
					T4.FOLDNUMBER AS OLDNUMBER,
					T32.FREFCOST AS PRICE,
					T5.FNAME AS BILLTYPE,
					T1.FDATE AS FDATE,
          T4.FMATERIALID AS FMATERIALID,
          T4.F_KD_TEXT AS FHYMING,
        NULL AS INSTOCKNAME
				FROM T_STK_MISCELLANEOUS T1		
				LEFT JOIN T_STK_MISCELLANEOUSENTRY T2 ON T2.FID = T1.FID
				LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
				LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
				INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
				INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052		
				LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
        LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
        WHERE T1.FDOCUMENTSTATUS ='C'
        GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--分步式调出
    		SELECT
						T1.FBILLNO AS BILLNO,
						SUM(ISNULL(T2.FQTY, 0)) AS OUTQTY,
						0 AS INQTY,
						T41.FNAME AS NAME,
						T4.FNUMBER AS MATERIAL,
				T3.FNUMBER AS CKNAME,
                T31.FNAME AS CANGKUNAME,
						T4.FOLDNUMBER AS OLDNUMBER,
						T32.FREFCOST AS PRICE,
						T5.FNAME AS BILLTYPE,
 					  T1.FDATE AS FDATE,
            T4.FMATERIALID AS FMATERIALID,
            T4.F_KD_TEXT AS FHYMING,
            T33.FNAME AS INSTOCKNAME
					FROM T_STK_STKTRANSFERIN T1				
					LEFT JOIN T_STK_STKTRANSFERINENTRY T2 ON T1.FID = T2.FID
					LEFT JOIN T_BD_STOCK T3 ON T2.FSRCSTOCKID = T3.FSTOCKID
					LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
					INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
					INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
					LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
                    LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
                    LEFT JOIN T_BD_STOCK_L T33 ON T33.FSTOCKID=T2.FDESTSTOCKID 
          WHERE T1.FDOCUMENTSTATUS ='C'
          GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER,T33.FNAME

UNION ALL
--销售退货
    	SELECT
								T1.FBILLNO AS BILLNO,
								0 AS OUTQTY,
								SUM(ISNULL(T2.FRealQty, 0)) AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
				                T3.FNUMBER AS CKNAME,
                                T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                                T4.FMATERIALID AS FMATERIALID,
                                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM T_SAL_RETURNSTOCK T1	
							LEFT JOIN T_SAL_RETURNSTOCKENTRY T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID
				--			LEFT JOIN T_SAL_OUTSTOCKENTRY T21 ON T21.FMATERIALID = T2.FMATERIALID
				--			LEFT JOIN T_SAL_OUTSTOCKENTRY_F T22 ON T21.FID = T22.FID AND T31.FLOCALEID = 2052				
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--分步式调入
				SELECT
							T1.FBILLNO AS BILLNO,
							0 AS OUTQTY,
							SUM(ISNULL(T2.FQTY, 0)) AS INQTY,
							T41.FNAME,
							T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
							T4.FOLDNUMBER AS OLDNUMBER,
							T32.FREFCOST AS PRICE,
							T5.FNAME AS BILLTYPE,
							T1.FDATE AS FDATE,
              T4.FMATERIALID AS FMATERIALID,
              T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
						FROM T_STK_STKTRANSFERIN T1					
						LEFT JOIN T_STK_STKTRANSFERINENTRY T2 ON T1.FID = T2.FID
						LEFT JOIN T_BD_STOCK T3 ON T2.FDestStockId = T3.FSTOCKID
						LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID AND T31.FLOCALEID = 2052
						INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
						INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052
						LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
            LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID 
            WHERE T1.FDOCUMENTSTATUS ='C'
            GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--采购入库
    	SELECT
								T1.FBILLNO AS BILLNO,
								0 AS OUTQTY,
								SUM(ISNULL(T2.FRealQty, 0)) AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                T4.FMATERIALID AS FMATERIALID,
                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM t_STK_InStock T1	
							LEFT JOIN T_STK_INSTOCKENTRY T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID			
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--采购退料
    	SELECT
								T1.FBILLNO AS BILLNO,
								0 AS OUTQTY,
								SUM(ISNULL(T2.FRMREALQTY, 0)) AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                T4.FMATERIALID AS FMATERIALID,
                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM t_PUR_MRB T1	
							LEFT JOIN T_PUR_MRBENTRY T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID			
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--生产入库
    	SELECT
								T1.FBILLNO AS BILLNO,
								0 AS OUTQTY,
								SUM(ISNULL(T2.FRealQty, 0)) AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                T4.FMATERIALID AS FMATERIALID,
                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM T_PRD_INSTOCK T1	
							LEFT JOIN T_PRD_INSTOCKENTRY T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID			
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPE AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--盘盈
    	SELECT
								T1.FBILLNO AS BILLNO,
								0 AS OUTQTY,
								SUM(ISNULL(T2.FGainQty, 0)) AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                T4.FMATERIALID AS FMATERIALID,
                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM T_STK_STKCOUNTGAIN T1	
							LEFT JOIN T_STK_STKCOUNTGAINENTRY T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID			
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--盘亏
    	SELECT
								T1.FBILLNO AS BILLNO,
								SUM(ISNULL(T2.FLossQty, 0)) AS OUTQTY,
                0 AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                T4.FMATERIALID AS FMATERIALID,
                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM T_STK_STKCOUNTLOSS T1	
							LEFT JOIN T_STK_STKCOUNTLOSSENTRY T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID			
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER
UNION ALL
--初始化库存
    	SELECT
								T1.FBILLNO AS BILLNO,
                0 AS OUTQTY,
								SUM(ISNULL(T2.FQty, 0)) AS INQTY,
								T41.FNAME AS NAME,
								T4.FNUMBER AS MATERIAL,
			T3.FNUMBER AS CKNAME,
            T31.FNAME AS CANGKUNAME,
								T4.FOLDNUMBER AS OLDNUMBER,
								T32.FREFCOST AS PRICE,
								T5.FNAME AS BILLTYPE,
								T1.FDATE AS FDATE,
                T4.FMATERIALID AS FMATERIALID,
                T4.F_KD_TEXT AS FHYMING,
                                NULL AS INSTOCKNAME
							FROM T_STK_INVINIT T1	
							LEFT JOIN T_STK_INVINITDETAIL T2 ON T2.FID = T1.FID
							LEFT JOIN T_BD_STOCK T3 ON T2.FSTOCKID = T3.FSTOCKID
							LEFT JOIN T_BD_STOCK_L T31 ON T31.FSTOCKID = T3.FSTOCKID			
							INNER JOIN T_BD_MATERIAL T4 ON T4.FMATERIALID = T2.FMATERIALID
							INNER JOIN T_BD_MATERIAL_L T41 ON T41.FMATERIALID = T4.FMATERIALID AND T41.FLOCALEID = 2052					
							LEFT JOIN T_BAS_BILLTYPE_L T5 ON T5.FBILLTYPEID = T1.FBILLTYPEID AND T5.FLOCALEID = 2052
              LEFT JOIN t_BD_MaterialStock T32 ON T4.FMATERIALID = T32.FMATERIALID
              WHERE T1.FDOCUMENTSTATUS ='C'
              GROUP BY T1.FBILLNO,T41.FNAME,T4.FNUMBER,T31.FNAME,T4.FOLDNUMBER,T32.FREFCOST,T5.FNAME,T1.FDATE,T4.FMATERIALID,T4.F_KD_TEXT,T3.FNUMBER


) AS T 
  WHERE FMATERIALID = '{1}'   AND CKNAME = '{2}'
  ORDER BY 	BILLNO";


        string SQL4SalerRankList = @"/*dialect*/ 
 SELECT 
2 as JinDu,
T3.FNUMBER AS FMATERIAL,
T3.FOLDNUMBER AS FOLDNUMBER,
T31.FNAME AS FNAME,
T3.F_KD_TEXT AS FHYMING,
T4.FNAME AS MATERIALGROUP,
T32.FREFCOST AS FPRICE,
-- TA.FNAME AS KEHU,
sum(case  when month(T1.FDATE)=1 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'JANSALENO',
CAST (0 AS DECIMAL(18,2))  AS 'JANSALEAMT',
sum(case  when month(T1.FDATE)=1 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'JANZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'JANZENGPINAMT',
sum(case  when month(T1.FDATE)=1 then  T2.FQTY else 0 end )  as 'JANSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'JANSUMAMT',
SUM(CASE WHEN MONTH(T1.FDATE)=1 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'JANNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'JANNOSENDAMT',

sum(case  when month(T1.FDATE)=2 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'FEBSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'FEBSALEAMT',
sum(case  when month(T1.FDATE)=2 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'FEBZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'FEBZENGPINAMT',
sum(case  when month(T1.FDATE)=2 then  T2.FQTY else 0 end )  as 'FEBSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'FEBSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=2 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'FEBNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'FEBNOSENDAMT',

sum(case  when month(T1.FDATE)=3 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'MARSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'MARSALEAMT',
sum(case  when month(T1.FDATE)=3 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'MARZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'MARZENGPINAMT',
sum(case  when month(T1.FDATE)=3 then  T2.FQTY else 0 end )  as 'MARSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'MARSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=3 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'MARNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'MARNOSENDAMT',
 
sum(case  when month(T1.FDATE)=4 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'APRSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'APRSALEAMT',
sum(case  when month(T1.FDATE)=4 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'APRZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'APRZENGPINAMT',
sum(case  when month(T1.FDATE)=4 then  T2.FQTY else 0 end )  as 'APRSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'APRSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=4 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'APRNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'APRNOSENDAMT',

sum(case  when month(T1.FDATE)=5 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'MAYSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'MAYSALEAMT',
sum(case  when month(T1.FDATE)=5 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'MAYZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'MAYZENGPINAMT',
sum(case  when month(T1.FDATE)=5 then  T2.FQTY else 0 end )  as 'MAYSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'MAYSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=5 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'MAYNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'MAYNOSENDAMT',

sum(case  when month(T1.FDATE)=6 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'JUNSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'JUNSALEAMT',
sum(case  when month(T1.FDATE)=6 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'JUNZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'JUNZENGPINAMT',
sum(case  when month(T1.FDATE)=6 then  T2.FQTY else 0 end )  as 'JUNSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'JUNSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=6 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'JUNNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'JUNNOSENDAMT',

sum(case  when month(T1.FDATE)=7 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'JULSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'JULSALEAMT',
sum(case  when month(T1.FDATE)=7 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'JULZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'JULZENGPINAMT',
sum(case  when month(T1.FDATE)=7 then  T2.FQTY else 0 end )  as 'JULSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'JULSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=7 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'JULNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'JULNOSENDAMT',

sum(case  when month(T1.FDATE)=8 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'AUGSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'AUGSALEAMT',
sum(case  when month(T1.FDATE)=8 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'AUGZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'AUGZENGPINAMT',
sum(case  when month(T1.FDATE)=8 then  T2.FQTY else 0 end )  as 'AUGSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'AUGSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=8 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'AUGNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'AUGNOSENDAMT',

sum(case  when month(T1.FDATE)=9 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'SEPSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'SEPSALEAMT',
sum(case  when month(T1.FDATE)=9 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'SEPZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'SEPZENGPINAMT',
sum(case  when month(T1.FDATE)=9 then  T2.FQTY else 0 end )  as 'SEPSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'SEPSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=9 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'SEPNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'SEPNOSENDAMT',

sum(case  when month(T1.FDATE)=10 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'OCTSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'OCTSALEAMT',
sum(case  when month(T1.FDATE)=10 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'OCTZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'OCTZENGPINAMT',
sum(case  when month(T1.FDATE)=10 then  T2.FQTY else 0 end )  as 'OCTSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'OCTSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=10 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'OCTNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'OCTNOSENDAMT',

sum(case  when month(T1.FDATE)=11 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'NOVSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'NOVSALEAMT',
sum(case  when month(T1.FDATE)=11 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'NOVZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'NOVZENGPINAMT',
sum(case  when month(T1.FDATE)=11 then  T2.FQTY else 0 end )  as 'NOVSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'NOVSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=11 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'NOVNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'NOVNOSENDAMT',

sum(case  when month(T1.FDATE)=12 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'DECSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'DECSALEAMT',
sum(case  when month(T1.FDATE)=12 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'DECZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'DECZENGPINAMT',
sum(case  when month(T1.FDATE)=12 then  T2.FQTY else 0 end )  as 'DECSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'DECSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=12 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'DECNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'DECNOSENDAMT',

CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARSALENO',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARSALEAMT',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARZENGPINNO',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARZENGPINAMT',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARSUMTOTAL',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARSUMAMT',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARNOSENDNO',
CAST (0 AS DECIMAL(18,2)) AS 'ALLYEARNOSENDAMT',
row_number() over (ORDER BY T3.FNUMBER) as FIDENTITYID INTO {0}
FROM
T_BD_MATERIAL T3
LEFT JOIN T_SAL_ORDERENTRY T2 ON T2.FMATERIALID = T3.FMATERIALID
LEFT JOIN T_SAL_ORDER T1 ON T1.FID = T2.FID  
INNER JOIN T_SAL_ORDERENTRY_F TS1 ON T2.FENTRYID = TS1.FENTRYID
INNER JOIN T_SAL_ORDERENTRY_R TS2 ON TS2.FENTRYID=T2.FENTRYID
LEFT JOIN T_SAL_AVAILABLEQTY T5 ON T5.FMATERIALID = T2.FMATERIALID 
LEFT JOIN T_BD_MATERIAL_L T31 ON T3.FMATERIALID = T31.FMATERIALID
LEFT JOIN t_BD_MaterialStock T32 ON T3.FMATERIALID = T32.FMATERIALID
AND T31.FLOCALEID = 2052
LEFT JOIN T_BD_MATERIALGROUP_L T4 ON T4.FID = T3.FMATERIALGROUP
AND T4.FLOCALEID = 2052
LEFT JOIN T_BD_CUSTOMER_L TA on TA.FCUSTID=T1.FCUSTID
	WHERE
		datepart(MONTH, T1.FDATE) BETWEEN 1 AND 12
       AND T1.FDOCUMENTSTATUS ='C'
       AND  DATEPART(YEAR,T1.FDATE) = {1}	
";


        string leftSQL = " group by  T3.FNUMBER,T3.FOLDNUMBER,T31.FNAME,T3.F_KD_TEXT,T4.FNAME,T32.FREFCOST";



        string updateSaleNO = @"/*dialect*/ 
UPDATE  {0}
SET JANSALEAMT = isnull(FPRICE * JANSALENO, 0),
 FEBSALEAMT = isnull(FPRICE * FEBSALENO, 0),
 MARSALEAMT = isnull(FPRICE * MARSALENO, 0),
 APRSALEAMT = isnull(FPRICE * APRSALENO, 0),
 MAYSALEAMT = isnull(FPRICE * MAYSALENO, 0),
 JUNSALEAMT = isnull(FPRICE * JUNSALENO, 0),
 JULSALEAMT = isnull(FPRICE * JULSALENO, 0),
 AUGSALEAMT = isnull(FPRICE * AUGSALENO, 0),
 SEPSALEAMT = isnull(FPRICE,0) * isnull(SEPSALENO, 0),
 OCTSALEAMT = isnull(FPRICE * OCTSALENO, 0),
 NOVSALEAMT = isnull(FPRICE * NOVSALENO, 0),
 DECSALEAMT = isnull(FPRICE * DECSALENO, 0),
 ALLYEARSALENO = ISNULL(
	JANSALENO + FEBSALENO + MARSALENO + APRSALENO + MAYSALENO + JUNSALENO + JULSALENO + AUGSALENO + SEPSALENO + OCTSALENO + NOVSALENO + DECSALENO,
	0
),
 ALLYEARSALEAMT = ISNULL(
	FPRICE * (
		JANSALENO + FEBSALENO + MARSALENO + APRSALENO + MAYSALENO + JUNSALENO + JULSALENO + AUGSALENO + SEPSALENO + OCTSALENO + NOVSALENO + DECSALENO
	),
	0
)";


        string updateSaleZP = @"/*dialect*/ 
UPDATE  {0}
SET JANZENGPINAMT = isnull(FPRICE * JANZENGPINNO, 0),
 FEBZENGPINAMT = isnull(FPRICE * FEBZENGPINNO, 0),
 MARZENGPINAMT = isnull(FPRICE * MARZENGPINNO, 0),
 APRZENGPINAMT = isnull(FPRICE * APRZENGPINNO, 0),
 MAYZENGPINAMT = isnull(FPRICE * MAYZENGPINNO, 0),
 JUNZENGPINAMT = isnull(FPRICE * JUNZENGPINNO, 0),
 JULZENGPINAMT = isnull(FPRICE * JULZENGPINNO, 0),
 AUGZENGPINAMT = isnull(FPRICE * AUGZENGPINNO, 0),
 SEPZENGPINAMT = isnull(FPRICE * SEPZENGPINNO, 0),
 OCTZENGPINAMT = isnull(FPRICE * OCTZENGPINNO, 0),
 NOVZENGPINAMT = isnull(FPRICE * NOVZENGPINNO, 0),
 DECZENGPINAMT = isnull(FPRICE * DECZENGPINNO, 0),
 ALLYEARZENGPINNO = ISNULL(
	JANZENGPINNO + FEBZENGPINNO + MARZENGPINNO + APRZENGPINNO + MAYZENGPINNO + JUNZENGPINNO + JULZENGPINNO + AUGZENGPINNO + SEPZENGPINNO + OCTZENGPINNO + NOVZENGPINNO + DECZENGPINNO,
	0
),
 ALLYEARZENGPINAMT = ISNULL(
	FPRICE * (
		JANZENGPINNO + FEBZENGPINNO + MARZENGPINNO + APRZENGPINNO + MAYZENGPINNO + JUNZENGPINNO + JULZENGPINNO + AUGZENGPINNO + SEPZENGPINNO + OCTZENGPINNO + NOVZENGPINNO + DECZENGPINNO
	),
	0
)";

        string updateTotalAMT = @"/*dialect*/ 
UPDATE  {0}
SET JANSUMAMT = isnull(FPRICE * JANSUMTOTAL, 0),
 FEBSUMAMT = isnull(FPRICE * FEBSUMTOTAL, 0),
 MARSUMAMT = isnull(FPRICE * MARSUMTOTAL, 0),
 APRSUMAMT = isnull(FPRICE * APRSUMTOTAL, 0),
 MAYSUMAMT = isnull(FPRICE * MAYSUMTOTAL, 0),
 JUNSUMAMT = isnull(FPRICE * JUNSUMTOTAL, 0),
 JULSUMAMT = isnull(FPRICE * JULSUMTOTAL, 0),
 AUGSUMAMT = isnull(FPRICE * AUGSUMTOTAL, 0),
 SEPSUMAMT = isnull(FPRICE * SEPSUMTOTAL, 0),
 OCTSUMAMT = isnull(FPRICE * OCTSUMTOTAL, 0),
 NOVSUMAMT = isnull(FPRICE * NOVSUMTOTAL, 0),
 DECSUMAMT = isnull(FPRICE * DECSUMTOTAL, 0),
 ALLYEARSUMTOTAL = ISNULL(
	JANSUMTOTAL + FEBSUMTOTAL + MARSUMTOTAL + APRSUMTOTAL + MAYSUMTOTAL + JUNSUMTOTAL + JULSUMTOTAL + AUGSUMTOTAL + SEPSUMTOTAL + OCTSUMTOTAL + NOVSUMTOTAL + DECSUMTOTAL,
	0
),
 ALLYEARSUMAMT = ISNULL(
	FPRICE * (
		JANSUMTOTAL + FEBSUMTOTAL + MARSUMTOTAL + APRSUMTOTAL + MAYSUMTOTAL + JUNSUMTOTAL + JULSUMTOTAL + AUGSUMTOTAL + SEPSUMTOTAL + OCTSUMTOTAL + NOVSUMTOTAL + DECSUMTOTAL
	),
	0
)";

        string updateNoSendAMT = @"/*dialect*/ 
UPDATE  {0}
SET JANNOSENDAMT = isnull(FPRICE * JANNOSENDNO, 0),
 FEBNOSENDAMT = isnull(FPRICE * FEBNOSENDNO, 0),
 MARNOSENDAMT = isnull(FPRICE * MARNOSENDNO, 0),
 APRNOSENDAMT = isnull(FPRICE * APRNOSENDNO, 0),
 MAYNOSENDAMT = isnull(FPRICE * MAYNOSENDNO, 0),
 JUNNOSENDAMT = isnull(FPRICE * JUNNOSENDNO, 0),
 JULNOSENDAMT = isnull(FPRICE * JULNOSENDNO, 0),
 AUGNOSENDAMT = isnull(FPRICE * AUGNOSENDNO, 0),
 SEPNOSENDAMT = isnull(FPRICE * SEPNOSENDNO, 0),
 OCTNOSENDAMT = isnull(FPRICE * OCTNOSENDNO, 0),
 NOVNOSENDAMT = isnull(FPRICE * NOVNOSENDNO, 0),
 DECNOSENDAMT = isnull(FPRICE * DECNOSENDNO, 0),
 ALLYEARNOSENDNO = ISNULL(
	JANNOSENDNO + FEBNOSENDNO + MARNOSENDNO + APRNOSENDNO + MAYNOSENDNO + JUNNOSENDNO + JULNOSENDNO + AUGNOSENDNO + SEPNOSENDNO + OCTNOSENDNO + NOVNOSENDNO + DECNOSENDNO,
	0
),
 ALLYEARNOSENDAMT = ISNULL(
	FPRICE * (
		JANNOSENDNO + FEBNOSENDNO + MARNOSENDNO + APRNOSENDNO + MAYNOSENDNO + JUNNOSENDNO + JULNOSENDNO + AUGNOSENDNO + SEPNOSENDNO + OCTNOSENDNO + NOVNOSENDNO + DECNOSENDNO
	),
	0
)";

        string SQL4SalerRankListByCust = @"/*dialect*/ 
  SELECT
2 as JinDu,
	T3.FNAME AS PROVINCECUST,
	T4.FNAME AS CITYCUST,
	T5.FNAME AS COUNTRYCUST,
	T6.FNAME AS SHOUHUOCUST,
    TC.FNAME AS SHXSZU,
	T7.FCREATEDATE AS JIAMENGRIQI,
    TA.FNAME AS KEHU,
sum(case when month(T1.FDATE)=1 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'JANSALENO',
sum(case when month(T1.FDATE)=1 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JANSALEAMT',
sum(case when month(T1.FDATE)=1 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'JANZENGPINNO',
sum(case when month(T1.FDATE)=1 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost)AS 'JANZENGPINAMT',
sum(case when month(T1.FDATE)=1 then  T2.FQTY else 0 end )  as 'JANSUMTOTAL',
sum(case when month(T1.FDATE)=1 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=1 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JANSUMAMT',
SUM(CASE WHEN MONTH(T1.FDATE)=1 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'JANNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=1 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'JANNOSENDAMT',

sum(case when month(T1.FDATE)=2 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'FEBSALENO',
sum(case when month(T1.FDATE)=2 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost)AS 'FEBSALEAMT',
sum(case when month(T1.FDATE)=2 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'FEBZENGPINNO',
sum(case when month(T1.FDATE)=2 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'FEBZENGPINAMT',
sum(case when month(T1.FDATE)=2 then  T2.FQTY else 0 end )  as 'FEBSUMTOTAL',
sum(case when month(T1.FDATE)=2 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=2 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'FEBSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=2 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'FEBNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=2 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'FEBNOSENDAMT',

sum(case when month(T1.FDATE)=3 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'MARSALENO',
sum(case when month(T1.FDATE)=3 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'MARSALEAMT',
sum(case when month(T1.FDATE)=3 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'MARZENGPINNO',
sum(case when month(T1.FDATE)=3 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'MARZENGPINAMT',
sum(case when month(T1.FDATE)=3 then  T2.FQTY else 0 end )  as 'MARSUMTOTAL',
sum(case when month(T1.FDATE)=3 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=3 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'MARSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=3 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'MARNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=3 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'MARNOSENDAMT',
 
sum(case when month(T1.FDATE)=4 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'APRSALENO',
sum(case when month(T1.FDATE)=4 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'APRSALEAMT',
sum(case when month(T1.FDATE)=4 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'APRZENGPINNO',
sum(case when month(T1.FDATE)=4 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'APRZENGPINAMT',
sum(case when month(T1.FDATE)=4 then  T2.FQTY else 0 end )  as 'APRSUMTOTAL',
sum(case when month(T1.FDATE)=4 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=4 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'APRSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=4 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'APRNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=4 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'APRNOSENDAMT',

sum(case when month(T1.FDATE)=5 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'MAYSALENO',
sum(case when month(T1.FDATE)=5 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'MAYSALEAMT',
sum(case when month(T1.FDATE)=5 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'MAYZENGPINNO',
sum(case when month(T1.FDATE)=5 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'MAYZENGPINAMT',
sum(case when month(T1.FDATE)=5 then  T2.FQTY else 0 end )  as 'MAYSUMTOTAL',
sum(case when month(T1.FDATE)=5 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=5 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'MAYSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=5 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'MAYNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=5 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'MAYNOSENDAMT',

sum(case when month(T1.FDATE)=6 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'JUNSALENO',
sum(case when month(T1.FDATE)=6 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JUNSALEAMT',
sum(case when month(T1.FDATE)=6 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'JUNZENGPINNO',
sum(case when month(T1.FDATE)=6 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JUNZENGPINAMT',
sum(case when month(T1.FDATE)=6 then  T2.FQTY else 0 end )  as 'JUNSUMTOTAL',
sum(case when month(T1.FDATE)=6 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=6 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JUNSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=6 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'JUNNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=6 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'JUNNOSENDAMT',

sum(case when month(T1.FDATE)=7 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'JULSALENO',
sum(case when month(T1.FDATE)=7 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JULSALEAMT',
sum(case when month(T1.FDATE)=7 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'JULZENGPINNO',
sum(case when month(T1.FDATE)=7 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JULZENGPINAMT',
sum(case when month(T1.FDATE)=7 then  T2.FQTY else 0 end )  as 'JULSUMTOTAL',
sum(case when month(T1.FDATE)=7 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=7 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'JULSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=7 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'JULNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=7 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'JULNOSENDAMT',

sum(case when month(T1.FDATE)=8 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'AUGSALENO',
sum(case when month(T1.FDATE)=8 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'AUGSALEAMT',
sum(case when month(T1.FDATE)=8 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'AUGZENGPINNO',
sum(case when month(T1.FDATE)=8 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'AUGZENGPINAMT',
sum(case when month(T1.FDATE)=8 then  T2.FQTY else 0 end )  as 'AUGSUMTOTAL',
sum(case when month(T1.FDATE)=8 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=8 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'AUGSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=8 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'AUGNOSENDNO',
SUM(CASE WHEN MONTH(T1.FDATE)=8 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'AUGNOSENDAMT',

sum(case when month(T1.FDATE)=9 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'SEPSALENO',
sum(case when month(T1.FDATE)=9 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'SEPSALEAMT',
sum(case when month(T1.FDATE)=9 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'SEPZENGPINNO',
sum(case when month(T1.FDATE)=9 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'SEPZENGPINAMT',
sum(case when month(T1.FDATE)=9 then  T2.FQTY else 0 end )  as 'SEPSUMTOTAL',
sum(case when month(T1.FDATE)=9 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=9 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'SEPSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=9 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'SEPNOSENDNO',
SUM(CASE WHEN month(T1.FDATE)=9 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost)  AS 'SEPNOSENDAMT',

sum(case when month(T1.FDATE)=10 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'OCTSALENO',
sum(case when month(T1.FDATE)=10 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'OCTSALEAMT',
sum(case when month(T1.FDATE)=10 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'OCTZENGPINNO',
sum(case when month(T1.FDATE)=10 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'OCTZENGPINAMT',
sum(case when month(T1.FDATE)=10 then  T2.FQTY else 0 end )  as 'OCTSUMTOTAL',
sum(case when month(T1.FDATE)=10 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=10 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'OCTSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=10 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'OCTNOSENDNO',
SUM(CASE WHEN month(T1.FDATE)=10 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'OCTNOSENDAMT',

sum(case when month(T1.FDATE)=11 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'NOVSALENO',
sum(case when month(T1.FDATE)=11 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'NOVSALEAMT',
sum(case when month(T1.FDATE)=11 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'NOVZENGPINNO',
sum(case when month(T1.FDATE)=11 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'NOVZENGPINAMT',
sum(case when month(T1.FDATE)=11 then  T2.FQTY else 0 end )  as 'NOVSUMTOTAL',
sum(case when month(T1.FDATE)=11 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=11 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'NOVSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=11 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'NOVNOSENDNO',
SUM(CASE WHEN month(T1.FDATE)=11 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'NOVNOSENDAMT',

sum(case when month(T1.FDATE)=12 and TS1.FISFREE='0' then  T2.FQTY else 0 end )  as 'DECSALENO',
sum(case when month(T1.FDATE)=12 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'DECSALEAMT',
sum(case when month(T1.FDATE)=12 and TS1.FISFREE='1' then  T2.FQTY else 0 end )  as 'DECZENGPINNO',
sum(case when month(T1.FDATE)=12 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'DECZENGPINAMT',
sum(case when month(T1.FDATE)=12 then  T2.FQTY else 0 end )  as 'DECSUMTOTAL',
sum(case when month(T1.FDATE)=12 and TS1.FISFREE='0' then  T2.FQTY else 0 end *  T9.FRefCost+case when month(T1.FDATE)=12 and TS1.FISFREE='1' then  T2.FQTY else 0 end *  T9.FRefCost) AS 'DECSUMAMT',
SUM(CASE WHEN month(T1.FDATE)=12 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END) AS 'DECNOSENDNO',
SUM(CASE WHEN month(T1.FDATE)=12 THEN TS2.FBASEREMAINOUTQTY ELSE 0 END * T9.FRefCost) AS 'DECNOSENDAMT',

CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARSALENO',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARSALEAMT',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARZENGPINNO',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARZENGPINAMT',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARSUMTOTAL',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARSUMAMT',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARNOSENDNO',
CAST (0 AS DECIMAL(18,2))  AS 'ALLYEARNOSENDAMT',
T8.FTEL AS MOBILEPHONE,
T8.FADDRESS AS ADDRESS,
row_number() over (ORDER BY T3.FNAME) as FIDENTITYID into {0}
FROM
	T_SAL_ORDER T1 
LEFT JOIN T_SAL_ORDERENTRY T2 ON T2.FID = T1.FID
INNER JOIN T_SAL_ORDERENTRY_F TS1 ON T2.FENTRYID = TS1.FENTRYID
INNER JOIN T_SAL_ORDERENTRY_R TS2 ON TS2.FENTRYID=T2.FENTRYID
LEFT JOIN T_BD_CUSTOMER_L T3 ON T1.F_PAEZ_PROVINCECUS = T3.FCUSTID
LEFT JOIN T_BD_CUSTOMER_L T4 ON T1.F_PAEZ_CITYCUS = T4.FCUSTID
LEFT JOIN T_BD_CUSTOMER_L T5 ON T1.F_PAEZ_COUNTRYCUS = T5.FCUSTID
LEFT JOIN T_BD_CUSTOMER_L T6 ON T1.F_PAEZ_FINALCUS = T6.FCUSTID
LEFT JOIN T_BD_CUSTOMER T7 ON T3.FCUSTID = T7.FCUSTID
LEFT JOIN T_BD_CUSTOMER T8 ON T6.FCUSTID = T8.FCUSTID
LEFT JOIN t_BD_MaterialStock T9 ON T9.FMATERIALID=T2.FMATERIALID
LEFT JOIN T_BD_CUSTOMER_L TA on TA.FCUSTID=T1.FCUSTID
LEFT JOIN T_BD_OPERATORGROUPENTRY TB ON TB.FENTRYID = T7.FSALGROUPID
LEFT JOIN T_BD_OPERATORGROUPENTRY_L TC ON TB.FENTRYID=TC.FENTRYID AND TC.FLOCALEID=2052

WHERE
		datepart(MONTH, T1.FDATE) BETWEEN 1 AND 12 AND T1.FDOCUMENTSTATUS ='C'
       AND  DATEPART(YEAR,T1.FDATE) = {1}		
";

        string leftSQLByCust = "  GROUP BY T3.FNAME,	T4.FNAME, T5.FNAME, T6.FNAME,	T7.FCREATEDATE,T8.FTEL,	T8.FADDRESS,TA.FNAME,TC.FNAME";

        string UpdateAllYear = @"/*dialect*/ 
UPDATE  {0}
SET
 ALLYEARSALENO = ISNULL(
	JANSALENO + FEBSALENO + MARSALENO + APRSALENO + MAYSALENO + JUNSALENO + JULSALENO + AUGSALENO + SEPSALENO + OCTSALENO + NOVSALENO + DECSALENO,
	0
),
 ALLYEARSALEAMT = ISNULL(
	JANSALEAMT + FEBSALEAMT + MARSALEAMT + APRSALEAMT + MAYSALEAMT + JUNSALEAMT + JULSALEAMT + AUGSALEAMT + SEPSALEAMT + OCTSALEAMT + NOVSALEAMT + DECSALEAMT,
	0
),
ALLYEARZENGPINNO = ISNULL(
	JANZENGPINNO + FEBZENGPINNO + MARZENGPINNO + APRZENGPINNO + MAYZENGPINNO + JUNZENGPINNO + JULZENGPINNO + AUGZENGPINNO + SEPZENGPINNO + OCTZENGPINNO + NOVZENGPINNO + DECZENGPINNO,
	0
),
 ALLYEARZENGPINAMT = ISNULL(
	JANZENGPINAMT + FEBZENGPINAMT + MARZENGPINAMT + APRZENGPINAMT + MAYZENGPINAMT + JUNZENGPINAMT + JULZENGPINAMT + AUGZENGPINAMT + SEPZENGPINAMT + OCTZENGPINAMT + NOVZENGPINAMT + DECZENGPINAMT,
	0
),
ALLYEARSUMTOTAL = ISNULL(
	JANSUMTOTAL + FEBSUMTOTAL + MARSUMTOTAL + APRSUMTOTAL + MAYSUMTOTAL + JUNSUMTOTAL + JULSUMTOTAL + AUGSUMTOTAL + SEPSUMTOTAL + OCTSUMTOTAL + NOVSUMTOTAL + DECSUMTOTAL,
	0
),
 ALLYEARSUMAMT = ISNULL(
	JANSUMAMT + FEBSUMAMT + MARSUMAMT + APRSUMAMT + MAYSUMAMT + JUNSUMAMT + JULSUMAMT + AUGSUMAMT + SEPSUMAMT + OCTSUMAMT + NOVSUMAMT + DECSUMAMT,
	0
),
 ALLYEARNOSENDNO = ISNULL(
	JANNOSENDNO + FEBNOSENDNO + MARNOSENDNO + APRNOSENDNO + MAYNOSENDNO + JUNNOSENDNO + JULNOSENDNO + AUGNOSENDNO + SEPNOSENDNO + OCTNOSENDNO + NOVNOSENDNO + DECNOSENDNO,
	0
),
 ALLYEARNOSENDAMT = ISNULL(
		JANNOSENDAMT + FEBNOSENDAMT + MARNOSENDAMT + APRNOSENDAMT + MAYNOSENDAMT + JUNNOSENDAMT + JULNOSENDAMT + AUGNOSENDAMT + SEPNOSENDAMT + OCTNOSENDAMT + NOVNOSENDAMT + DECNOSENDAMT,
	0
)";

        string SQL4NoOutDetail = @"/*dialect*/ 
SELECT
    2 AS JINDU,
	TA.FNAME AS OUTSTOCK,
	T5.FNUMBER AS PRODNO,
	T5.FOLDNUMBER AS OLDNUMBER,
	T4.FNAME AS PRODNAME,
	T5.F_KD_TEXT AS HYMING,
	T3.FREFCOST AS FPRICE,
	T1.FBILLNO AS BILLNO,
	T1.FDATE AS BILLDATE,
	SUM(T6.FBASEREMAINOUTQTY) AS NOOUTNO,
	T10.FNAME AS SHOUHUO,
	T7.FNAME AS PROVINCECUST,
	T8.FNAME AS CITYCUST,
	T9.FNAME AS COUNTRYCUST,
row_number() over (ORDER BY T1.F_KD_BASE) as FIDENTITYID INTO {0}
FROM
	T_SAL_ORDER T1 
LEFT JOIN T_SAL_ORDERENTRY T2 ON T1.FID = T2.FID
LEFT JOIN T_BD_MATERIALSTOCK T3 ON T2.FMATERIALID = T3.FMATERIALID
LEFT JOIN T_BD_MATERIAL_L T4 ON T3.FMATERIALID = T4.FMATERIALID
LEFT JOIN T_BD_MATERIAL T5 ON T4.FMATERIALID = T5.FMATERIALID
INNER JOIN T_SAL_ORDERENTRY_R T6 ON T6.FENTRYID = T2.FENTRYID
LEFT JOIN T_BD_CUSTOMER_L T7 ON T1.F_PAEZ_PROVINCECUS = T7.FCUSTID
LEFT JOIN T_BD_CUSTOMER_L T8 ON T1.F_PAEZ_CITYCUS = T8.FCUSTID
LEFT JOIN T_BD_CUSTOMER_L T9 ON T1.F_PAEZ_COUNTRYCUS = T9.FCUSTID
LEFT JOIN T_BD_CUSTOMER_L T10 ON T1.F_PAEZ_FINALCUS = T10.FCUSTID
LEFT JOIN T_BD_STOCK_L TA ON TA.FSTOCKID = T1.F_KD_BASE AND TA.FLOCALEID = 2052 
WHERE T6.FBASEREMAINOUTQTY > 0  AND T1.FCLOSESTATUS='A' AND T1. FDOCUMENTSTATUS='C' AND TA.FSTOCKID = '{1}'  AND T2.FMATERIALID= {2}
GROUP BY 	TA.FNAME,T5.FNUMBER,T5.FOLDNUMBER,T4.FNAME,T5.F_KD_TEXT,T1.FBILLNO,T1.FDATE,T10.FNAME,T7.FNAME,T8.FNAME,T9.FNAME,T3.FREFCOST,T1.F_KD_BASE
	

";

        string SQL4OnTheWayDetail = @"/*dialect*/ 
SELECT
   2 AS JINDU,
	T6.FNAME AS FAHUOSTOCK,
	T7.FNAME AS RUKUSTOCK,
	T1.FNUMBER AS MATERIAL,
	T1.FOLDNUMBER AS OLDNUMBER,
	T4.FNAME AS NAME,
	T1.F_KD_TEXT AS FHYMING,
	T5.FREFCOST AS PRICE,
	T3.FBILLNO AS BILLNO,
	T3.FDATE AS FDATE,
    T2.FQTY - T2R.FBASEJOINQTY AS ONTHEWAYNO,
row_number() over (ORDER BY T1.FNUMBER) as FIDENTITYID INTO {0}
FROM
	T_BD_MATERIAL T1
LEFT JOIN T_STK_STKTRANSFEROUTENTRY T2 ON T1.FMATERIALID = T2.FMATERIALID
LEFT JOIN T_STK_STKTRANSFEROUT T3 ON T2.FID = T3.FID
LEFT JOIN T_STK_STKTRANSFEROUTENTRY_R T2R ON T2.FENTRYID=T2R.FENTRYID
LEFT JOIN T_BD_MATERIAL_L T4 ON T1.FMATERIALID = T4.FMATERIALID
LEFT JOIN t_BD_MaterialStock T5 ON T1.FMATERIALID = T5.FMATERIALID
LEFT JOIN T_BD_STOCK_L T6 ON T2.FSRCSTOCKID = T6.FSTOCKID
LEFT JOIN T_BD_STOCK_L T7 ON T2.FDESTSTOCKID = T7.FSTOCKID
WHERE T2.FQTY - T2R.FBASEJOINQTY > 0 AND T3.FDOCUMENTSTATUS='C' and T1.FMATERIALID={1}
";






    }
}
